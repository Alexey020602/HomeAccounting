@page "/Login"
@using global::Authorization.Contracts
@using MudBlazor
@using Microsoft.AspNetCore.Components.Forms
@using Shared.Blazor
@inject IAuthorizationApi AuthorizationApi
@inject ILoginService LoginStateProvider
@inject NavigationManager NavigationManager

<MudCard Style="max-width: 600px; padding: 20px">
    <EditForm Model="loginRequest" OnValidSubmit="LoginAsync">
        <MudStack Justify="Justify.SpaceBetween">
            <MudTextField
                @bind-Text="loginRequest.Login"
                Variant="Variant.Outlined"
                Label="Логин"
                For="@(() => loginRequest.Login)"/>
            <MudTextField
                Variant="Variant.Outlined"
                InputType="InputType.Password"
                @bind-Text="loginRequest.Password"
                Label="Пароль"
                For="@(() => loginRequest.Password)"/>

        <MudGrid Justify="Justify.SpaceBetween">
            <MudItem xs="12" md="3" Class="d-flex flex-column align-center">
                <MudButton Variant="Variant.Filled" ButtonType="ButtonType.Reset" Color="Color.Secondary" Style="width: 100%">
                    Отмена
                </MudButton>
            </MudItem>
            <MudItem xs="12" md="3" Class="d-flex flex-column align-center">
                <MudButton Variant="Variant.Filled" ButtonType="ButtonType.Submit" Color="Color.Primary" Style="width: 100%">
                    Войти
                </MudButton>
            </MudItem>
        </MudGrid>
        </MudStack>
    </EditForm>
</MudCard>

@code {
    [SupplyParameterFromQuery] private string ReturnUrl { get; set; } = "/";
    private LoginRequest loginRequest = new();

    private async Task LoginAsync()
    {
        await LoginStateProvider.Login(loginRequest);
        NavigationManager.NavigateTo(ReturnUrl);
    }

}