@page "/User/{id:guid}/edit"
@using Authorization.Contracts
@using FluentValidation
@using MaybeResults
@using Shared.Blazor.Components
@using Shared.Blazor.RefitWithResult
@inject ISnackbar Snackbar
@inject IUsersApi UsersApi

<AuthorizeView Policy="@AuthorizationModule.UserbyidPolicyName" Resource="Id">
    <Authorized>
        <MaybeComponent Result="UserMaybe" Context="user">
            <UserEditForm User="user" OnSubmit=""/>
        </MaybeComponent>
    </Authorized>
    <NotAuthorized>
        У вас нет прав редактировать данного пользоа=вателя
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter] public Guid Id { get; set; }
    private IMaybe<User>? UserMaybe { get; set; }

    private Task Update(User user)
    {
        return Task.CompletedTask;
    }
    
    protected override async Task OnInitializedAsync()
    {
        UserMaybe = await UsersApi.GetUser(Id).ToMaybe();
    }
}