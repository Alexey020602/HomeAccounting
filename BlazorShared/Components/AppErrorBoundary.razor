@using System.Net
@using BlazorShared.Authorization
@using Refit
@inherits ErrorBoundaryBase
@inject IAuthenticationStorage AuthenticationStorage
@inject NavigationManager NavigationManager

@ChildContent

@code {
    protected override async Task OnErrorAsync(Exception exception)
    {
        if (exception is not ApiException
            {
                StatusCode: HttpStatusCode.Unauthorized
            })
        {
            throw exception;
        }
        Console.WriteLine(exception);
        await AuthenticationStorage.RemoveAuthorizationAsync();
        NavigationManager.NavigateTo($"/login?returnUrl={NavigationManager.GetCurrentPath()}");
    }

    private Task ProcessError(Exception exception)
    {
        return Task.CompletedTask;
    }
}