
@using Core.Extensions
@using Core.Model.ChecksList
@using Core.Model.Report
<style>.mud-chart-line { overflow: visible; }</style>
<MudCard>
    <MudCardHeader @onclick="@Toggle" Style="cursor: pointer">
        <MudStack Row="true" Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">
            <MudText Align="Align.Center" Typo="Typo.h2">
                Отчет за
                <MudText Inline="true" Color="Color.Primary"
                         Typo="Typo.h2">@Report.PeriodDate.ToString("MMMM yyyy")</MudText>
            </MudText>
            <MudSpacer/>
            <MudText Typo="Typo.h2">@Report.Sum.ToString()</MudText>
        </MudStack>
    </MudCardHeader>

    <MudCollapse @bind-Expanded="ShowCategories">
        @if (Report.Categories.Any())
        {
            <MudCard Elevation="0">
                    <MudChart
                        Style="padding-left: 20px"
                        ChartType="ChartType.Bar"
                        ChartSeries="Series"
                        XAxisLabels="Labels"
                        
                        Width="100%"
                        Height="100%"
                        ChartOptions="chartOptions"/>

                    <MudList T="Category" ReadOnly="true">
                        @foreach (var category in Report.Categories)
                        {
                            <MudListItem Value="category">
                                <CategoryComponent Category="category"/>
                            </MudListItem>
                        }
                    </MudList>
            </MudCard>
        }
    </MudCollapse>
</MudCard>

@code {
    [Parameter] public Report Report { get; set; } = null!;

    private readonly ChartOptions chartOptions = new()
    {
        ShowLegend = false,
        YAxisTicks = 5,
        YAxisRequireZeroPoint = false,
        // YAxisFormat = "N2",
    };

    private List<ChartSeries> Series =>
    [
        new ChartSeries()
        {
            // Name = "Категории",
            Data = ChartData,
        }
    ];

    private double[] ChartData => Report.Categories.Select(category => category.Sum.ToDouble()).ToArray();
    private string[] Labels => Report.Categories.Select(c => c.Name).ToArray();
    private bool ShowCategories { get; set; }
    private void Toggle() => ShowCategories = !ShowCategories;

    protected override void OnParametersSet()
    {
    }

}