@page "/"
@page "/Check"
@using BlazorShared.Forms
@using BlazorShared.Api
@using BlazorShared.Components
@using Core.Model.Requests

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h3 class="mb-0">Добавление нового чека</h3>
            <button class="btn btn-light" @onclick="ToggleInputMode">
                <i class="bi @(ManualInput ? "bi-file-earmark-arrow-up" : "bi-pencil") me-2"></i>
                @ToggleButtonText
            </button>
        </div>

        <div class="card-body">
            <div class="input-container p-3 border rounded">
                @if (ManualInput)
                {
                    <div class="manual-form">
                        <CheckManualForm OnSubmit="@SendManualRequest"/>
                    </div>
                }
                else
                {
                    <div class="file-form">
                        <CheckFileForm OnSubmit="@SendFileRequest"/>
                    </div>
                }
            </div>

            @if (SavedCheck is not null)
            {
                <div class="mt-4">
                    <div class="card shadow-sm mt-3">
                        <div class="card-header bg-light">
                            <h5 class="mb-0">Сохраненный чек</h5>
                        </div>
                        <div class="card-body p-0">
                            <ReceiptComponent Check="SavedCheck"/>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


@code {
    [Inject] private IChecksApi ChecksApi { get; set; } = null!;
    private Core.Model.ChecksList.Check? SavedCheck { get; set; }
    private bool ManualInput { get; set; }
    private string ToggleButtonText => ManualInput ? "Ввести чек файлом" : "Ввести чек вручную";
    private void ToggleInputMode() => ManualInput = !ManualInput;

    private async Task SendFileRequest(FileCheckRequest request) => SavedCheck = await ChecksApi.GetReceipt(request);

    private async Task SendManualRequest(CheckRequest request) => SavedCheck = await ChecksApi.GetReceipt(request);
}