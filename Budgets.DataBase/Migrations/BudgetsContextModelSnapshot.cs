// <auto-generated />
using System;
using Budgets.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Budgets.DataBase.Migrations
{
    [DbContext(typeof(BudgetsContext))]
    partial class BudgetsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Budgets")
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Budgets.DataBase.Entities.Budget", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("BeginOfPeriod")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uuid");

                    b.Property<int?>("Limit")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Budgets", "Budgets");
                });

            modelBuilder.Entity("Budgets.DataBase.Entities.BudgetRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("BudgetRoles", "Budgets");
                });

            modelBuilder.Entity("Budgets.DataBase.Entities.BudgetUser", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BudgetId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BudgetRoleId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "BudgetId", "BudgetRoleId");

                    b.HasIndex("BudgetId");

                    b.HasIndex("BudgetRoleId");

                    b.ToTable("BudgetUsers", "Budgets");
                });

            modelBuilder.Entity("Budgets.DataBase.Entities.Invitation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BudgetId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Invitations", "Budgets");
                });

            modelBuilder.Entity("Budgets.DataBase.Entities.BudgetUser", b =>
                {
                    b.HasOne("Budgets.DataBase.Entities.Budget", "Budget")
                        .WithMany("BudgetUsers")
                        .HasForeignKey("BudgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Budgets.DataBase.Entities.BudgetRole", "BudgetRole")
                        .WithMany("BudgetUsers")
                        .HasForeignKey("BudgetRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Budget");

                    b.Navigation("BudgetRole");
                });

            modelBuilder.Entity("Budgets.DataBase.Entities.Budget", b =>
                {
                    b.Navigation("BudgetUsers");
                });

            modelBuilder.Entity("Budgets.DataBase.Entities.BudgetRole", b =>
                {
                    b.Navigation("BudgetUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
