version: "3"

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    networks:
      - "my-network"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=11111111
      - PGPORT=5433
    ports:
      - "5433:5433"
    volumes:
      - postgresdata:/var/lib/postgresql/data
  #    healthcheck:
  #      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
  #      interval: 10s
  #      timeout: 5s
  #      retries: 5
  migrations:
    container_name: migrations_service
    pull_policy: always
    networks:
      - "my-network"
    image: migrations_service
    depends_on:
      - postgres
    build:
      context: .
      dockerfile: MigrationService/Dockerfile
    environment:
      - DOTNET_ENVIRONMENT=Release
      - ConnectionStrings_DefaultConnection=Host=postgres;Port=5433;Database=HomeAccounting;Username=postgres;Password=11111111;
  api:
    image: api
    pull_policy: always
    networks:
      - "my-network"
    expose:
      - 80
    ports:
      - 5080:80
    build:
      context: .
      dockerfile: Api/Dockerfile
    container_name: api
    depends_on:
      - postgres
      - migrations
    environment:
      - DOTNET_ENVIRONMENT=Release
      - ConnectionStrings_DefaultConnection=Host=postgres;Port=5433;Database=HomeAccounting;Username=postgres;Password=11111111;
      - ASPNETCORE_HTTP_PORTS=80
  client:
    image: client
    pull_policy: always
    build:
      context: .
      dockerfile: Client/Dockerfile
    networks:
      - "my-network"
    container_name: client
    depends_on:
      - api
    expose:
      - 80
    ports:
      - 5160:80
  #    environment:
  #      - VIRTUAL_HOST=homeaccounting.opolcheniya.keenetic.pro
  #      - VIRTUAL_PORT=80
  #      - LETSENCRYPT_HOST=homeaccounting.opolcheniya.keenetic.pro
  #      - LETSENCRYPT_EMAIL=myemail@mydomain.com
  reverse_proxy:
    image: nginx:latest
    container_name: reverse_proxy
    networks:
      - "my-network"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    #      - "./proxy.conf:/etc/nginx/conf.d/proxy.conf"
    ports:
      - "80:80"
    #      - "443:443"
    depends_on:
      - client
      - api


volumes:
  postgresdata:

networks:
  my-network:
    external: false

#    name: "my-network"